name: Continuous integration

on:
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
  release:
    types: [published]

env:
  DOTNET_VERSION: '6.0.x'
  REPOSITORY_URL: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Lint Code Base
      uses: github/super-linter@v4
      env:
        VALIDATE_ALL_CODEBASE: false
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install dotnet SDK ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Build Solution
      run: dotnet build --configuration Release
    - name: Test Solution
      run: dotnet test --no-build --configuration Release
  pack:
    runs-on: ubuntu-latest
    needs: [build, linter]
    if: github.event_name == 'push' || github.event_name == 'release'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install dotnet SDK ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Pack for publish
      if: github.event_name == 'release'
      run: dotnet pack --output ./artifacts --configuration Release -p:PackageVersion=${{ github.event.release.tag_name }}
    - name: Pack for push
      if: github.event_name == 'push'
      run: dotnet pack --output ./artifacts --configuration Release
    - uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: ./artifacts
  publish:
    runs-on: ubuntu-latest
    needs: pack
    if: github.event_name == 'release'
    steps:
    - name: Install dotnet SDK ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
        path: ./artifacts
    - name: Publish packages to github.com
      run: dotnet nuget push ./artifacts/**/*.nupkg --source ${{ env.REPOSITORY_URL }} --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
    - name: Publish packages to nuget.org
      run: dotnet nuget push ./artifacts/**/*.nupkg --source nuget.org --api-key ${{secrets.PACKAGE_NUGET}} --skip-duplicate